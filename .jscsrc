{
    "validateLineBreaks": "LF",
    "validateIndentation": 4,
    "validateQuoteMarks": "'",
    "validateParameterSeparator": ", ",

    "safeContextKeyword": ["that"],

    "disallowEmptyBlocks": true,
//    "disallowDanglingUnderscores": true,
    "disallowYodaConditions": true,
    "disallowTrailingWhitespace": true,
    "disallowMultipleLineStrings": true,
    "disallowKeywordsOnNewLine": ["else", "catch", "finally"],
    "disallowImplicitTypeConversion": ["numeric", "string"],
    "disallowImplicitTypeConversion": ["numeric", "boolean", "binary", "string"],
    "disallowKeywords": ["with"],
    "disallowTrailingComma": true,

    "disallowSpaceAfterObjectKeys": true,
    "disallowSpaceBeforeBinaryOperators": [","],
    "disallowSpacesInsideObjectBrackets": true,
    "disallowSpacesInsideArrayBrackets": true,
    "disallowSpacesInsideParentheses": true,

    "requireSemicolons": true,
    "requireLineFeedAtFileEnd": true,
    "requireLineBreakAfterVariableAssignment": true,
    "requireDotNotation": true,
//    "requireCapitalizedComments": {
//        allExcept: ["jshint", "jscs", "globals"]
//    },
    "requireBlocksOnNewline": true,
    "requireMultipleVarDecl": "onevar",
    "requireParenthesesAroundIIFE": true,
    "requireCommaBeforeLineBreak": true,
    "requireCapitalizedConstructors": true,
    "requireCamelCaseOrUpperCaseIdentifiers": true,

    "requireCurlyBraces": ["if", "else", "for", "while", "do", "try", "catch", "finally"],
    "requirePaddingNewLineAfterVariableDeclaration": true,
    "requireSpaceAfterKeywords": ["if", "else", "for", "while", "do", "switch", "return", "try", "catch", "finally", "typeof", "function"],
    "requireSpaceBeforeBinaryOperators": ["=", "+", "-", "/", "*", "==", "===", "!=", "!==", ">", ">=", "<", "<="],
    "requireSpaceAfterBinaryOperators": ["=", ",", "+", "-", "/", "*", "==", "===", "!=", "!==", ">", ">=", "<", "<="],
    "requireSpaceBeforePostfixUnaryOperators": [],
    "requireSpaceAfterPrefixUnaryOperators": [],
    "requireSpacesInConditionalExpression": {
        "afterTest": true,
        "beforeConsequent": true,
        "afterConsequent": true,
        "beforeAlternate": true
    },
    "requireSpacesInFunctionExpression": {
        "beforeOpeningCurlyBrace": true
    },

    "requireOperatorBeforeLineBreak": ["?", "+", "-", "/", "*", "=", "==", "===", "!=", "!==", ">", ">=", "<", "<="]
}
